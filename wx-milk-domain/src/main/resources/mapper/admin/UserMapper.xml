<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="wx.milk.domain.UserRepository">
    <!-- auto generate -->
    <resultMap id="baseResultMap" type="com.framework.core.security.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="roleResultMap" type="wx.milk.model.Role">
        <result column="role_no" property="roleNo" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="colums_condition">
     	id, account, name , password, status ,create_time,create_user,update_time,update_user
    </sql>

    <sql id="condition">
        1 = 1
        <if test="null != params">
            <if test="null!=params.queryCondition and ''!=params.queryCondition">
                And ${params.queryCondition}
            </if>
            <if test="null != params.account and '' != params.account">
                and account = #{params.account}
            </if>
            <if test="null != params.name and  '' != params.name">
                and name like ${params.name}
            </if>
            <if test="null != params.gender and '' != params.gender">
                and gender = <![CDATA[ #{params.gender} ]]>
            </if>
            <if test="null != params.status and '' != params.status">
                and status = #{params.status}
            </if>
            <if test="null != params.validateName and '' != params.validateName">
                and name = #{params.validateName}
            </if>
            <if test="null != params.validateAccount and '' != params.validateAccount">
                and account = #{params.validateAccount}
            </if>
        </if>
    </sql>

    <sql id="uniqe_condition">
        1=1
        <if test="null!=account and ''!=account">
            AND account=#{account}
        </if>
    </sql>

    <select id="selectByPage" resultMap="baseResultMap" resultType="map">
        SELECT
        <include refid="colums_condition"/>
        FROM `t_user` t
        WHERE
        <include refid="condition"/>
        LIMIT #{page.startRowNum} ,#{page.rows}
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM `t_user` t
        WHERE
        <include refid="condition"/>
    </select>

    <select id="getOnlineNumber" resultType="java.lang.Integer">
        SELECT
          count(1)
        FROM `t_user` t
        WHERE t.is_online = 1 and t.status = 1

    </select>

    <select id="validate" resultType="java.lang.Integer">
        SELECT
          count(1)
        FROM `t_user` t
        WHERE (name = #{params.name} or account = #{params.account})
    </select>

    <select id="selectByParams" resultMap="baseResultMap">
        SELECT
        <include refid="colums_condition"/>
        FROM `t_user` t
        WHERE
        <include refid="condition"/>
    </select>

    <!-- id>10 内置账户不能够删除 -->
    <delete id="deleteByPrimaryKey">
		DELETE FROM t_user 
		WHERE id = #{id}
	</delete>

    <delete id="deleteByUnique">
        DELETE FROM t_user
        WHERE id != 1
        <include refid="uniqe_condition"/>
    </delete>

    <delete id="deleteByParams" parameterType="map">
        DELETE
        FROM t_user
        WHERE id != 1
        <include refid="condition"/>
    </delete>

    <select id="findByPrimaryKey" resultMap="baseResultMap">
        SELECT
        <include refid="colums_condition"/>
        FROM t_user u
        WHERE id = #{id}
    </select>

    <select id="findByUnique" resultMap="baseResultMap">
        SELECT
        <include refid="colums_condition"/>
        FROM t_user u
        WHERE
        <include refid="uniqe_condition"/>
        limit 1
    </select>

    <select id="findByParam" resultMap="baseResultMap" parameterType="map">
        SELECT
        <include refid="colums_condition"/>
        FROM t_user u
        WHERE
        <include refid="condition"/>
    </select>

    <select id="getByAccount" resultMap="baseResultMap" parameterType="map">
        SELECT
        <include refid="colums_condition"/>
        FROM t_user u
        WHERE
        u.account = #{account}
    </select>

    <select id="listByAccount" resultMap="roleResultMap" parameterType="map">
        SELECT
	      tr.role_no,
	      tr.`name`
        FROM t_user tu
        JOIN t_user_role tur ON tur.account = tu.account
        JOIN t_role tr ON tr.role_no = tur.role_no
        where tu.`status` = 1
              AND tr.`status` = 1
              AND tu.account = #{account}
    </select>

    <insert id="insert" parameterType="com.framework.core.security.User">
        INSERT INTO t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isOnline != null">
                is_online,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="account != null">
                #{account},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="isOnline != null">
                #{isOnline},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="createUser != null">
                #{createUser},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="updateUser != null">
                #{updateUser},
            </if>

        </trim>
    </insert>

    <update id="update" parameterType="com.framework.core.security.User">
        UPDATE t_user
        <set>
            <if test="account != null">
                account = #{account},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="account != null">
                account = #{account},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="isOnline != null">
                is_online = #{isOnline},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
        </set>
        WHERE id = #{id} OR account = #{account}
    </update>
</mapper>
